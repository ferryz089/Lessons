calls = 0                           # Объявляем переменную "вызовы"

def count_calls():                  # создаем функцию фиксации вызова
    global calls                    # используем глобальную пременную вызовов
    calls = calls + 1               # увеличиваем перменную при вызове функции

def string_info(string):            # создаем функцию ввода строки
    count_calls()                   # используем функцию количества вызовов
    print(f'{(len(string), string.upper(), string.lower())}')   # выводим на печать при обращении к функции

def is_contains(string, list_to_search):                        # создаем функцию на проверку вхождения строки в список
    count_calls()                   # используем функцию количества вызовов
    to_search = False               # Объявляем локальную переменную - флаг
    for i in list_to_search:        # создаем цикл проверки строк в списке
        i = i.lower()               # преобразуем каждый элемент списка в строчные символы
        if string.lower() in i:     # условие сходства строки (все символы - строчные) и элемента списка
            to_search = True        # ставим положительный флаг при срабатывании условия
            break                   # останавливаем цикл при положительном флаге
    return to_search                # возвращаем флаг

string_info('Capybara')             # вводим функцию ввода строки с параметром 1
string_info('Armageddon')           # вводим функцию ввода строки с параметром 2
print(is_contains('Urban', ['ban', 'BaNaN', 'urBAN'])) # выведем на печать функцию проверки вхождения
print(is_contains('cycle', ['recycling', 'cyclic']))   # выведем на печать функцию проверки вхождения
print(calls)                        # выведем на печать число вызовов
